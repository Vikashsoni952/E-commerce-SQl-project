-- Customer Analysis:
select * from customers;
select * from orders;
select * from order_details;
select * from payments;
select * from products;
select * from shipping;

-- Who are the top 10 customers by total spending?
with rankSpendingTotal as
(select *, dense_rank() over(order by total_spent desc) spending_rank from customers
)

select * from rankSpendingTotal
where spending_rank <= 10
order by spending_rank;

-- What is the average order value for each customer?
select customer_id , avg(total_amount) as order_value
from orders
where order_status <> 'Cancelled'
group by customer_id
order by order_value desc;

-- How many customers made repeat purchases, and how many are one-time buyers?
select sum(case when No_of_purchage = 1 then 1 else 0 end) as one_times_buyers,
       sum(case when No_of_purchage > 1 then 1 else 0 end) as multiple_times_buyers
from(select customer_id , count(order_id) as No_of_purchage
from orders 
group by customer_id)as t;
-- Sales Analysis:

-- What are the monthly sales trends over the past year?

-- Monthly Sales Trends Over the Past Year
SELECT 
    TO_CHAR(order_date, 'YYYY-MM') AS month, 
    SUM(total_amount) AS monthly_sales,
    LAG(SUM(total_amount)) OVER (ORDER BY TO_CHAR(order_date, 'YYYY-MM')) AS previous_month_sales,
    (SUM(total_amount) - LAG(SUM(total_amount)) OVER (ORDER BY TO_CHAR(order_date, 'YYYY-MM'))) AS sales_difference
FROM orders
WHERE order_date >= NOW() - INTERVAL '1 year'
GROUP BY TO_CHAR(order_date, 'YYYY-MM')
ORDER BY month;


-- Which product categories are performing the best in terms of sales?

select category , total_revenue from (with salesTrack as (select p.category ,sum(od.quantity * od.price) total_revenue  from products p
join order_details od
on p.product_id = od.product_id
group by p.category)

select category , total_revenue , dense_rank() over(order by total_revenue desc) as top_rank 
from salesTrack) t
where top_rank <= 1 ;

-- What is the total revenue generated by each product category?
select p.category ,sum(od.quantity * od.price) total_revenue  from products p
join order_details od
on p.product_id = od.product_id
group by p.category;


-- Product Inventory:

-- Which products are running low on stock and need to be reordered?

select p.product_id , p.stock_quantity - o.quantity as stock
from order_details o
join products p 
on o.product_id = p.product_id
where p.stock_quantity - o.quantity <= p.reorder_level;

-- What is the average time a product spends in inventory before being sold?
with deliveryTime as (select  pd.product_id, AGE(p.payment_date , o.order_date) delivery_time from orders o
join payments p 
on o.order_id = p.order_id
join order_details od
on o.order_id = od.order_id
join products pd
on od.product_id = pd.product_id)

select product_id , avg(delivery_time) avg_delivery_time
from deliveryTime
group by product_id
order by avg_delivery_time desc;

-- What is the reorder frequency of each product?

select product_id , reorder_level
from products;

-- Order Analysis:

-- How many orders were placed in each state?
select c.state , count(o.order_id) no_of_orders from customers c
join orders o
on c.customer_id = o.customer_id
group by c.state;

-- What percentage of orders were delivered on time?

select  
count(*)* 100/(select count(*) from shipping)  delivered_on_time
from shipping
where shipping_status = 'Delivered'
;



-- What is the average delivery time for orders?
select
	 avg(delivery_time) avg_delivery_time 
from 
 	(select AGE( delivery_date ,shipping_date ) delivery_time from shipping
where shipping_status = 'Delivered') t

-- Payment Analysis:

-- What is the distribution of payment methods used by customers?
select p.payment_method , count(customer_id) distribution_of_payment from payments p
join orders o
on p.order_id = o.order_id
group by p.payment_method;

-- What is the total amount of payments received for each month?

select extract(month from payment_date) as month , sum(amount) total_amount
from payments
group by extract(month from payment_date);
-- How many orders were canceled, and what is the total amount of refunds issued?

select o.customer_id , sum(p.amount) from orders o
join payments p 
on o.order_id = p.order_id
where order_status = 'Cancelled'
group by o.customer_id ;

